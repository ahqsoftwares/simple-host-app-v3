name: "Publish Apps"

on:
  push:
    branches:
      - "master"

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Ninja Setup
        if: runner.os == 'Linux'
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Read yaml
        id: yaml-data
        uses: jbutcher5/read-yaml@main
        with:
          file: "./pubspec.yaml"
          key-path: '["version"]'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
         channel: "stable"
      
      - name: Install deps
        run: flutter pub get
      
      - name: Install pre-deps (linux)
        if: runner.os == 'Linux'
        run: sudo apt update

      - name: Install deps (linux)
        if: runner.os == 'Linux'
        run: sudo apt install libsecret-1-dev libjsoncpp-dev libsecret-tools libgtk-3-dev libsecret-1-0 zip --fix-missing
      
      - name: Build Android App
        if: runner.os == 'Linux'
        run: flutter build apk
      
      - name: Build Windows App
        if: runner.os == 'Windows'
        run: flutter build windows

      - name: Zip Win App
        if: runner.os == 'Windows'
        run: |
          cd ./build/windows/runner/Release && powershell Compress-Archive ./* windows.zip
      
      - name: Build Linux App
        if: runner.os == 'Linux'
        run: flutter build linux

      - name: Zip Linux App
        if: runner.os == 'Linux'
        run: cd ./build/linux && zip -r linux.zip .

      - name: Build Macos Apps
        if: runner.os == 'Macos'
        run: flutter build macos

      - name: Release
        uses: ncipollo/release-action@v1
        if: runner.os == 'Linux'
        with:
          allowUpdates: true
          draft: true
          tag: "v${{ steps.yaml-data.outputs.data }}"
          artifacts: "build/linux/linux.zip,build/app/outputs/flutter-apk/app-release.apk"
      
      - name: Release
        if: runner.os == 'Windows'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          tag: "v${{ steps.yaml-data.outputs.data }}"
          artifacts: "build/windows/runner/Release/windows.zip"